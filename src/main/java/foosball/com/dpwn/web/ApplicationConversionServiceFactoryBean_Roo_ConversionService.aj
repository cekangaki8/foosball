// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package foosball.com.dpwn.web;

import foosball.com.dpwn.model.Foosballuser;
import foosball.com.dpwn.model.Match;
import foosball.com.dpwn.model.Team;
import foosball.com.dpwn.model.UserRatings;
import foosball.com.dpwn.model.UserTeam;
import foosball.com.dpwn.model.UserTeamPK;
import foosball.com.dpwn.service.FoosballuserService;
import foosball.com.dpwn.service.MatchService;
import foosball.com.dpwn.service.TeamService;
import foosball.com.dpwn.service.UserRatingsService;
import foosball.com.dpwn.service.UserTeamService;
import foosball.com.dpwn.web.ApplicationConversionServiceFactoryBean;
import org.apache.commons.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    FoosballuserService ApplicationConversionServiceFactoryBean.foosballuserService;
    
    @Autowired
    MatchService ApplicationConversionServiceFactoryBean.matchService;
    
    @Autowired
    TeamService ApplicationConversionServiceFactoryBean.teamService;
    
    @Autowired
    UserRatingsService ApplicationConversionServiceFactoryBean.userRatingsService;
    
    @Autowired
    UserTeamService ApplicationConversionServiceFactoryBean.userTeamService;
    
    public Converter<Foosballuser, String> ApplicationConversionServiceFactoryBean.getFoosballuserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<foosball.com.dpwn.model.Foosballuser, java.lang.String>() {
            public String convert(Foosballuser foosballuser) {
                return new StringBuilder().append(foosballuser.getUsername()).append(' ').append(foosballuser.getFirstname()).append(' ').append(foosballuser.getLastname()).append(' ').append(foosballuser.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, Foosballuser> ApplicationConversionServiceFactoryBean.getIdToFoosballuserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, foosball.com.dpwn.model.Foosballuser>() {
            public foosball.com.dpwn.model.Foosballuser convert(java.lang.Long id) {
                return foosballuserService.findFoosballuser(id);
            }
        };
    }
    
    public Converter<String, Foosballuser> ApplicationConversionServiceFactoryBean.getStringToFoosballuserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, foosball.com.dpwn.model.Foosballuser>() {
            public foosball.com.dpwn.model.Foosballuser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Foosballuser.class);
            }
        };
    }
    
    public Converter<Match, String> ApplicationConversionServiceFactoryBean.getMatchToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<foosball.com.dpwn.model.Match, java.lang.String>() {
            public String convert(Match match) {
                return new StringBuilder().append(match.getFirstteamId()).append(' ').append(match.getSecondteamId()).append(' ').append(match.getFirstscore()).append(' ').append(match.getSecondscore()).toString();
            }
        };
    }
    
    public Converter<Long, Match> ApplicationConversionServiceFactoryBean.getIdToMatchConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, foosball.com.dpwn.model.Match>() {
            public foosball.com.dpwn.model.Match convert(java.lang.Long id) {
                return matchService.findMatch(id);
            }
        };
    }
    
    public Converter<String, Match> ApplicationConversionServiceFactoryBean.getStringToMatchConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, foosball.com.dpwn.model.Match>() {
            public foosball.com.dpwn.model.Match convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Match.class);
            }
        };
    }
    
    public Converter<Team, String> ApplicationConversionServiceFactoryBean.getTeamToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<foosball.com.dpwn.model.Team, java.lang.String>() {
            public String convert(Team team) {
                return new StringBuilder().append(team.getTeamname()).append(' ').append(team.getNumberofgames()).append(' ').append(team.getCumulativepoint()).append(' ').append(team.getRank()).toString();
            }
        };
    }
    
    public Converter<Long, Team> ApplicationConversionServiceFactoryBean.getIdToTeamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, foosball.com.dpwn.model.Team>() {
            public foosball.com.dpwn.model.Team convert(java.lang.Long id) {
                return teamService.findTeam(id);
            }
        };
    }
    
    public Converter<String, Team> ApplicationConversionServiceFactoryBean.getStringToTeamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, foosball.com.dpwn.model.Team>() {
            public foosball.com.dpwn.model.Team convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Team.class);
            }
        };
    }
    
    public Converter<UserRatings, String> ApplicationConversionServiceFactoryBean.getUserRatingsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<foosball.com.dpwn.model.UserRatings, java.lang.String>() {
            public String convert(UserRatings userRatings) {
                return new StringBuilder().append(userRatings.getRating()).toString();
            }
        };
    }
    
    public Converter<Long, UserRatings> ApplicationConversionServiceFactoryBean.getIdToUserRatingsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, foosball.com.dpwn.model.UserRatings>() {
            public foosball.com.dpwn.model.UserRatings convert(java.lang.Long id) {
                return userRatingsService.findUserRatings(id);
            }
        };
    }
    
    public Converter<String, UserRatings> ApplicationConversionServiceFactoryBean.getStringToUserRatingsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, foosball.com.dpwn.model.UserRatings>() {
            public foosball.com.dpwn.model.UserRatings convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), UserRatings.class);
            }
        };
    }
    
    public Converter<UserTeam, String> ApplicationConversionServiceFactoryBean.getUserTeamToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<foosball.com.dpwn.model.UserTeam, java.lang.String>() {
            public String convert(UserTeam userTeam) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<UserTeamPK, UserTeam> ApplicationConversionServiceFactoryBean.getIdToUserTeamConverter() {
        return new org.springframework.core.convert.converter.Converter<foosball.com.dpwn.model.UserTeamPK, foosball.com.dpwn.model.UserTeam>() {
            public foosball.com.dpwn.model.UserTeam convert(foosball.com.dpwn.model.UserTeamPK id) {
                return userTeamService.findUserTeam(id);
            }
        };
    }
    
    public Converter<String, UserTeam> ApplicationConversionServiceFactoryBean.getStringToUserTeamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, foosball.com.dpwn.model.UserTeam>() {
            public foosball.com.dpwn.model.UserTeam convert(String id) {
                return getObject().convert(getObject().convert(id, UserTeamPK.class), UserTeam.class);
            }
        };
    }
    
    public Converter<String, UserTeamPK> ApplicationConversionServiceFactoryBean.getJsonToUserTeamPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, foosball.com.dpwn.model.UserTeamPK>() {
            public UserTeamPK convert(String encodedJson) {
                return UserTeamPK.fromJsonToUserTeamPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<UserTeamPK, String> ApplicationConversionServiceFactoryBean.getUserTeamPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<foosball.com.dpwn.model.UserTeamPK, java.lang.String>() {
            public String convert(UserTeamPK userTeamPK) {
                return Base64.encodeBase64URLSafeString(userTeamPK.toJson().getBytes());
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getFoosballuserToStringConverter());
        registry.addConverter(getIdToFoosballuserConverter());
        registry.addConverter(getStringToFoosballuserConverter());
        registry.addConverter(getMatchToStringConverter());
        registry.addConverter(getIdToMatchConverter());
        registry.addConverter(getStringToMatchConverter());
        registry.addConverter(getTeamToStringConverter());
        registry.addConverter(getIdToTeamConverter());
        registry.addConverter(getStringToTeamConverter());
        registry.addConverter(getUserRatingsToStringConverter());
        registry.addConverter(getIdToUserRatingsConverter());
        registry.addConverter(getStringToUserRatingsConverter());
        registry.addConverter(getUserTeamToStringConverter());
        registry.addConverter(getIdToUserTeamConverter());
        registry.addConverter(getStringToUserTeamConverter());
        registry.addConverter(getJsonToUserTeamPKConverter());
        registry.addConverter(getUserTeamPKToJsonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
